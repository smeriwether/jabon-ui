// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Content /> when expanded should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Content
    content="Some content"
    expanded={true}
    onContentChange={[MockFunction]}
    onProjectChange={[MockFunction]}
    project={
      Object {
        "header1": Object {
          "key": "",
          "value": "",
        },
        "header2": Object {
          "key": "",
          "value": "",
        },
        "wsdlLink": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="h-65 w-100 fl"
        >
          <Editor
            name="main-editor"
            onChange={[MockFunction]}
            readOnly={false}
            value="Some content"
          />
        </div>,
        <div
          className="h-35 w-100 fl bb bt b--moon-gray"
        >
          <Project
            onChange={[Function]}
            onExpand={[Function]}
            project={
              Object {
                "header1": Object {
                  "key": "",
                  "value": "",
                },
                "header2": Object {
                  "key": "",
                  "value": "",
                },
                "wsdlLink": "",
              }
            }
          />
        </div>,
      ],
      "className": "h-100 w-100 br b--moon-gray",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Editor
            name="main-editor"
            onChange={[MockFunction]}
            readOnly={false}
            value="Some content"
          />,
          "className": "h-65 w-100 fl",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": "main-editor",
            "onChange": [MockFunction],
            "readOnly": false,
            "value": "Some content",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Project
            onChange={[Function]}
            onExpand={[Function]}
            project={
              Object {
                "header1": Object {
                  "key": "",
                  "value": "",
                },
                "header2": Object {
                  "key": "",
                  "value": "",
                },
                "wsdlLink": "",
              }
            }
          />,
          "className": "h-35 w-100 fl bb bt b--moon-gray",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [Function],
            "onExpand": [Function],
            "project": Object {
              "header1": Object {
                "key": "",
                "value": "",
              },
              "header2": Object {
                "key": "",
                "value": "",
              },
              "wsdlLink": "",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="h-65 w-100 fl"
          >
            <Editor
              name="main-editor"
              onChange={[MockFunction]}
              readOnly={false}
              value="Some content"
            />
          </div>,
          <div
            className="h-35 w-100 fl bb bt b--moon-gray"
          >
            <Project
              onChange={[Function]}
              onExpand={[Function]}
              project={
                Object {
                  "header1": Object {
                    "key": "",
                    "value": "",
                  },
                  "header2": Object {
                    "key": "",
                    "value": "",
                  },
                  "wsdlLink": "",
                }
              }
            />
          </div>,
        ],
        "className": "h-100 w-100 br b--moon-gray",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Editor
              name="main-editor"
              onChange={[MockFunction]}
              readOnly={false}
              value="Some content"
            />,
            "className": "h-65 w-100 fl",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "main-editor",
              "onChange": [MockFunction],
              "readOnly": false,
              "value": "Some content",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Project
              onChange={[Function]}
              onExpand={[Function]}
              project={
                Object {
                  "header1": Object {
                    "key": "",
                    "value": "",
                  },
                  "header2": Object {
                    "key": "",
                    "value": "",
                  },
                  "wsdlLink": "",
                }
              }
            />,
            "className": "h-35 w-100 fl bb bt b--moon-gray",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onChange": [Function],
              "onExpand": [Function],
              "project": Object {
                "header1": Object {
                  "key": "",
                  "value": "",
                },
                "header2": Object {
                  "key": "",
                  "value": "",
                },
                "wsdlLink": "",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<Content /> when not expanded should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Content
    content="Some content"
    expanded={false}
    onContentChange={[MockFunction]}
    onProjectChange={[MockFunction]}
    project={
      Object {
        "header1": Object {
          "key": "",
          "value": "",
        },
        "header2": Object {
          "key": "",
          "value": "",
        },
        "wsdlLink": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="h-100-h50 w-100 fl"
        >
          <Editor
            name="main-editor"
            onChange={[MockFunction]}
            readOnly={false}
            value="Some content"
          />
        </div>,
        <div
          className="h50 w-100 fl bb bt b--moon-gray"
        >
          <SmallProject
            onExpand={[Function]}
          />
        </div>,
      ],
      "className": "h-100 w-100 br b--moon-gray",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Editor
            name="main-editor"
            onChange={[MockFunction]}
            readOnly={false}
            value="Some content"
          />,
          "className": "h-100-h50 w-100 fl",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": "main-editor",
            "onChange": [MockFunction],
            "readOnly": false,
            "value": "Some content",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SmallProject
            onExpand={[Function]}
          />,
          "className": "h50 w-100 fl bb bt b--moon-gray",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onExpand": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="h-100-h50 w-100 fl"
          >
            <Editor
              name="main-editor"
              onChange={[MockFunction]}
              readOnly={false}
              value="Some content"
            />
          </div>,
          <div
            className="h50 w-100 fl bb bt b--moon-gray"
          >
            <SmallProject
              onExpand={[Function]}
            />
          </div>,
        ],
        "className": "h-100 w-100 br b--moon-gray",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Editor
              name="main-editor"
              onChange={[MockFunction]}
              readOnly={false}
              value="Some content"
            />,
            "className": "h-100-h50 w-100 fl",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "name": "main-editor",
              "onChange": [MockFunction],
              "readOnly": false,
              "value": "Some content",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SmallProject
              onExpand={[Function]}
            />,
            "className": "h50 w-100 fl bb bt b--moon-gray",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onExpand": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
